generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  name          String?
  createdAt     DateTime      @default(now()) @map("created_at")
  passwordHash  String?       @map("password_hash") @db.VarChar
  emailVerified Boolean?      @map("email_verified")
  
  sessions Session[]
  loginHistory      LoginHistory[]

  @@map("users")
}

model MembershipPlan {
  id          Int      @id @default(autoincrement())
  name        String
  price       Float
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("membership_plans")
}

model Session {
  id           String   @id @default(cuid())
  expiresAt    DateTime @map("expires_at") @db.Timestamptz(6)
  userId       Int      @map("user_id")
  lastActivity DateTime @default(now()) @map("last_activity") @db.Timestamptz(6)

  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model GameSetting {
  id    Int    @id @default(autoincrement())
  name  String @unique
  value String

  @@map("game_settings")
}

model EmailVerificationCode {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  email     String
  code      String   @unique
  expiresAt DateTime @map("expires_at")

  @@map("email_verification_codes")
}

model LoginHistory {
  id         Int      @id @default(autoincrement())
  userId     Int      @map("user_id")
  sessionId  String   @map("session_id")
  loginAt    DateTime @default(now()) @map("login_at")
  ipAddress  String?  @map("ip_address")
  userAgent  String?  @map("user_agent")
  clientId   String?  @map("client_id")

  user       User     @relation(fields: [userId], references: [id])

  @@map("login_history")
}